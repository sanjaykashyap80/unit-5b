// const {createStore} = require("redux")
import {createStore} from "redux"
import {reducer} from "./reducer.js"
import { INC_COUNT,DEC_COUNT } from "./actionTypes.js";
import {incCount} from "./action.js"



// const action = {type: "INC_COUNT", payload: 1};   // fixed, payload optional
// const incCountAction = {type: "INC_COUNT", payload: 1};   // fixed, payload optional
// const incCountAction = {type: "DEC_COUNT", payload: 1};   // fixed, payload optional

// const incCountAction = {
//     type: "ADD_TODO",
//      payload:{ id:1, title: "Learn Redux", status: false}
//     }; 

// const updateTodoAction = {
//     type: "UPDATE_TODO",
//      payload:{ id:3, title: "Learn React Redux", status: false}
//     }; 

class Store {
    constructor(reducer, init) {
        this.reducer = reducer;
        this.state = init;
    }

    getState(){
        return this.state
    }

    dispatch(action){
       this.state = this.reducer(this.state, action)
    }
}

// action type
// const INC_COUNT = "INC_COUNT"
// const DEC_COUNT = "DEC_COUNT"

// pure function
// fixed
// const reducer = (state, action) => {   
//     // if(action.type === "INC_COUNT") { state.count = state.count + action.payload}
//     if(action.type === "INC_COUNT") { 
//        return {...state, count : state.count + action.payload };
//     }
//    return state
   
// }
// const reducer = (state, {type, payload}) => {   
//     switch(type){
//         case "INC_COUNT":
//             return {...state, count: state.count + payload };
//         case "DEC_COUNT":
//             return {...state, count: state.count - payload };
//         case "ADD_TODO":
//             return {...state, todo: [...state.todo, payload] };
//         default:
//             return  state  
//     }
   
// }
// const reducer = (store, action) => {   
//    return store
// }

 

const init = {count:0, todo: []}

// const store = new Store(reducer, init); // fixed 
const store = createStore(reducer, init); // fixed 

console.log(store.getState())

// store.dispatch({type: INC_COUNT, payload: 1})
store.dispatch(incCount(1))

console.log(store.getState())

store.dispatch({type: DEC_COUNT, payload: 1})

console.log(store.getState())

store.dispatch({
    type: "ADD_TODO", 
    payload: {title: "Learn Redux", status: false},
});

store.dispatch({
    type: "ADD_TODO", 
    payload: {title: "Learn React Redux", status: false},
});

console.log(store.getState())

store.dispatch(incCount(10))